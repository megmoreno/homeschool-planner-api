import { getCursorFormatter, getCursorParser, prismaCursorConnectionQuery, wrapConnectionResult } from './util/cursors.js';
import { getRefFromModel } from './util/datamodel.js';
export const prismaModelKey = Symbol.for("Pothos.prismaModelKey");
export function prismaConnectionHelpers(builder, refOrType, options) {
    const modelName = typeof refOrType === "string" ? refOrType : refOrType.modelName;
    const formatCursor = getCursorFormatter(modelName, builder, options.cursor);
    const parseCursor = getCursorParser(modelName, builder, options.cursor);
    function resolve(list, args, ctx) {
        return wrapConnectionResult(list, args, getQuery(args, ctx).take, formatCursor);
    }
    function getQuery(args, ctx) {
        return prismaCursorConnectionQuery({
            args,
            ctx,
            maxSize: typeof options.maxSize === "function" ? options.maxSize(args, ctx) : options.maxSize,
            defaultSize: typeof options.defaultSize === "function" ? options.defaultSize(args, ctx) : options.defaultSize,
            parseCursor
        });
    }
    return {
        ref: typeof refOrType === "string" ? getRefFromModel(refOrType, builder) : refOrType,
        resolve,
        getQuery
    };
}
//# sourceMappingURL=connection-helpers.js.map
